name: Docker Image

on: 
  workflow_dispatch:
  push:
    tags:
      - '**'
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    # Remove pre-populated tools not needed for Docker builds to free up space for cache export
    # https://github.com/orgs/community/discussions/25678#discussioncomment-5242449
    - name: Delete tools folder
      run: rm -rf /opt/hostedtoolcache

    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: rvolosatovs/protoc
        tags: |
          type=raw,value=development,enable=${{ github.ref == 'refs/heads/main' }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=tag
        flavor: |
          latest=auto

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Load dependency versions
      run: cat deps.list >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        build-args: |
          ALPINE_IMAGE_VERSION=${{ env.ALPINE_IMAGE_VERSION }}
          DART_IMAGE_VERSION=${{ env.DART_IMAGE_VERSION }}
          GO_IMAGE_VERSION=${{ env.GO_IMAGE_VERSION }}
          GOOGLE_API_VERSION=${{ env.GOOGLE_API_VERSION }}
          GRPC_GATEWAY_VERSION=${{ env.GRPC_GATEWAY_VERSION }}
          GRPC_RUST_VERSION=${{ env.GRPC_RUST_VERSION }}
          GRPC_SWIFT_VERSION=${{ env.GRPC_SWIFT_VERSION }}
          GRPC_WEB_VERSION=${{ env.GRPC_WEB_VERSION }}
          NODE_IMAGE_VERSION=${{ env.NODE_IMAGE_VERSION }}
          PROTOC_GEN_DART_VERSION=${{ env.PROTOC_GEN_DART_VERSION }}
          PROTOC_GEN_DOC_VERSION=${{ env.PROTOC_GEN_DOC_VERSION }}
          PROTOC_GEN_GO_GRPC_VERSION=${{ env.PROTOC_GEN_GO_GRPC_VERSION }}
          PROTOC_GEN_GO_VERSION=${{ env.PROTOC_GEN_GO_VERSION }}
          PROTOC_GEN_GOGO_VERSION=${{ env.PROTOC_GEN_GOGO_VERSION }}
          PROTOC_GEN_GORM_VERSION=${{ env.PROTOC_GEN_GORM_VERSION }}
          PROTOC_GEN_GOTEMPLATE_VERSION=${{ env.PROTOC_GEN_GOTEMPLATE_VERSION }}
          PROTOC_GEN_GOVALIDATORS_VERSION=${{ env.PROTOC_GEN_GOVALIDATORS_VERSION }}
          PROTOC_GEN_GQL_VERSION=${{ env.PROTOC_GEN_GQL_VERSION }}
          PROTOC_GEN_JSONSCHEMA_VERSION=${{ env.PROTOC_GEN_JSONSCHEMA_VERSION }}
          PROTOC_GEN_LINT_VERSION=${{ env.PROTOC_GEN_LINT_VERSION }}
          PROTOC_GEN_RUST_VERSION=${{ env.PROTOC_GEN_RUST_VERSION }}
          PROTOC_GEN_SCALA_VERSION=${{ env.PROTOC_GEN_SCALA_VERSION }}
          PROTOC_GEN_TS_VERSION=${{ env.PROTOC_GEN_TS_VERSION }}
          PROTOC_GEN_VALIDATE_VERSION=${{ env.PROTOC_GEN_VALIDATE_VERSION }}
          RUST_IMAGE_VERSION=${{ env.RUST_IMAGE_VERSION }}
          SCALA_SBT_IMAGE_VERSION=${{ env.SCALA_SBT_IMAGE_VERSION }}
          SWIFT_IMAGE_VERSION=${{ env.SWIFT_IMAGE_VERSION }}
          UPX_VERSION=${{ env.UPX_VERSION }}
          XX_IMAGE_VERSION=${{ env.XX_IMAGE_VERSION }}
